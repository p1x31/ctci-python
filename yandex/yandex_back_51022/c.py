# Читаем количество строк, столбцов и ограничений
N, M, Q = map(int, input().split())
# Создаем словарь для названий и индексов колонок
columns = {}
# Читаем названия колонок и заполняем словарь
for i, name in enumerate(input().split()):
    columns[name] = i
# Создаем список для строк таблицы
rows = []
# Читаем строки таблицы и добавляем их в список
for _ in range(N):
    rows.append(list(map(int, input().split())))
# Создаем переменную для суммы всех чисел в подходящих строках
total = 0
# Создаем список для множеств индексов неподходящих строк
sets = []
# Для каждого ограничения
for _ in range(Q):
    # Читаем название колонки, знак сравнения и значение
    column, sign, value = input().split()
    value = int(value)
    # Создаем множество для индексов неподходящих строк
    s = set()
    # Для каждой строки

    for i in range(N):
        # Получаем значение в нужной колонке
        x = rows[i][columns[column]]
        # Если знак сравнения >
        if sign == '>':
            # Если значение в колонке не больше заданного значения
            if x > value:
                # Добавляем индекс строки в множество
                s.add(i)
        # Если знак сравнения <
        else:
            # Если значение в колонке не меньше заданного значения
            if x < value:
                # Добавляем индекс строки в множество
                s.add(i)
    # Добавляем множество в список
    sets.append(s)
# Находим пересечение всех множеств из списка
intersection = set.intersection(*sets)
# Вычитаем размер пересечения из общего количества строк
count = N - len(intersection)
# Если количество подходящих строк больше нуля
if count > 0:
    # Для каждой строки
    for i in range(N):
        # Если индекс строки в пересечении множеств
        if i in intersection:
            # Добавляем сумму всех чисел в строке к переменной суммы
            total += sum(rows[i])
else:
    total = 0
# Выводим переменную суммы как ответ
print(total)